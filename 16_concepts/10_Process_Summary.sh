--------------------------------------------------------------------------------------------
线程 vs 进程 vs 协程
一个进程里面有一个及以上线程
协程都在一个线程里面的

--------------------------------------------------------------------------------------------
进程是一个执行中的程序
1）每个进程都拥有自己的地址空间、内存、数据栈以及其他用于跟踪执行的辅助数据
2）操作系统管理其上所有进程的执行，并为这些进程合理地分配时间
3）进程也可通过派生(fork/spawn)新的进程来执行其他任务
线程
1）在同一个进程下执行，并共享相同的上下文
2）一个进程中的各个线程与主线程共享同一片数据空间
3）线程包括开始、执行顺序和结束三部分
4）它可以被抢占（中断）和临时挂起（也称为睡眠）————让步
协程
1）进程之间相互独立，可实现并行，但线程不可以，多线程只能并发执行，实际还是顺序执行，只是在同一时间片段，假似同时执行，cpu可以按时间切片执行，单核cpu同一个时刻只支持>一个线程执行任务，多线程并发事实上就是多个线程排队申请调用cpu，cpu处理任务速度非常快，所以看上去多个线程任务说并发处理。
2）协程本身是个单线程，协程需要用户自己进行手动切换——当某线程在执行任务中的函数A（协程A）时，可任意中断，手动切换到任务中的另一个函数B（协程B），然后在适当的时候在回>到函数A（协程A）中继续执行，这样虽然繁琐，但提供了更大的操作自由度，同时协程A和协程B都属于同一线程，切换效率相比于线程或进程间的切换有极大地优势。一个cpu支持上万的协>程都没有问题，适合用于高并发处理。https://www.imooc.com/article/268517


进程之间的通信
1）通过Queue、Pipes等实现进程之间的通道
