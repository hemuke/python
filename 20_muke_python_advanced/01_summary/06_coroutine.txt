协程
协程需要实现和线程类似的功能，那意味着协程也需要一些完整类似管理线程的机制，包括创建、执行、销毁等等，去管理协程，并且从性能上，比线程更加轻量。

	1）对于线程，很少区分内核级线程和用户级线程，一般称呼的线程都是内核级线程
	   Linux下top命令查看进程的线程数量，指的都是内核级线程
	2）协程本质是用户级线程 

用户自行调度，内核无法干涉
	1）消费者消费cnt
	2）生产者生产cnt

假如有一个模型 有协程1、协程2两个协程存在
当协程1一直占用着，那么协程2是没有办法运行的，因为协程1占用了他们对应的内核线程。
但是因为操作系统不知道有协程2的存在，所以如果协程1不主动让出内核线程，那么协程2就一直是没办法运行的。
因此协程只能由用户程序来自行调度，要让协程1主动让出，让协程2可以运行，也就是让协程1和协程2协作式的运行
这个和操作系统调度内核级线程很不一样，操作系统调度KST是可以强行暂停一个线程的运行而切换到另外一个线程去运行的，尽管这种暂停并非线程资源
