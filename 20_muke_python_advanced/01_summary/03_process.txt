进程存在的必要性:
	1）操作系统统一管理着计算机资源
	2）操作系统实现了对计算机资源的抽象
	3）操作系统提供了用户与计算机之间的接口
        4）程序切换：进程隔离资源、运行环境、提升资源利用率
        5）进程是系统进行资源分配和调度的基本单位
        6）进程作为程序独立运行的载体保障程序正常执行
        7) 是一个执行中的程序
	8）每个进程都拥有自己的地址空间、内存、数据栈、以及其他用于跟踪执行的辅助数据
	   操作系统管理其上所有进程的执行，并为这些进程合理地分配时间
           进程也可通过派生(fork spawn)新的进程来执行其他任务

进程的PCB控制块（内核空间）:
	1）标识符:唯一标记一个进程
	2）状态:记录进程运行的当前状态
	3）优先级:
	4）程序计数器:记录下一条指令的地址
	5）内存指针:指令、数据的内存地址
	6）上下文数据:运行状态下使用的数据
	7）IO状态信息:文件、设备占用情况
	8）记账信息:处理器时间、时钟统计

进程的（用户空间）: 这个stack是从上往下写，这个heap是从下往上写
	1）stack:局部变量，函数参数，返回地址
	2）heap:动态分配的内存 new
	3）BSS段:未初始化或初值为0的全局变量和静态局部变量
	4）数据段:已初始化或初值非0的全局变量和静态局部变量 0~127的数字
	5）代码段:可执行代码，字符串字面值，只读变量

进程的运行状态：
	1）就绪:当进场被分配到除CPU以外所有必要的资源后，只要再获得CPU的使用权，就可以立即运行。
	   就绪队列
	2）执行:进程获得CPU，其程序正在执行称为执行状态。并发 在单处理机中，在某个时刻只能有一个进程是处于执行状态
	3）阻塞:其他设备未就绪而无法继续执行，从而放弃CPU的进程。阻塞队列
	4）创建:分配PCB，PCB插入到就绪队列，进程拥有PCB但其他资源未就绪
	5）终止:进程结束由系统清理或者归还PCB的状态称为终止状态

         进程调度             IO请求
就绪状态 --------------> 执行 -----------> 阻塞
         <--------------      
         时间片用完
         <--------------------------------
         IO完成

进程的调度算法:
	1)多道程序设计，CPU资源有限
	2)CPU资源如何公平分配
	3)进程的优先级是有差异的
		非抢占式调度:略
		抢占式调度:
			FCFS 先来先服务调度算法
			SJF 最短作业优先算法
			RRN 最高响应比优先算法
			RR 时间片轮转算法
